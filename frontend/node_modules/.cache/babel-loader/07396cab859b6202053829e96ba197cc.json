{"ast":null,"code":"var _jsxFileName = \"/home/rapidev/Documents/task/src/Common/Barchart/Barchart.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const chart = useRef(null);\n  let chartRef = useRef();\n  useLayoutEffect(_s(() => {\n    _s();\n\n    am4core.useTheme(am4themes_animated);\n    var chart = am4core.create(\"barchartdiv\", am4charts.XYChart);\n    chart.data = [{\n      country: \"Lithuania\",\n      litres: 501\n    }, {\n      country: \"Czechia\",\n      litres: 301\n    }, {\n      country: \"Ireland\",\n      litres: 201\n    }, {\n      country: \"Germany\",\n      litres: 165\n    }, {\n      country: \"Australia\",\n      litres: 139\n    }, {\n      country: \"Austria\",\n      litres: 128\n    }, {\n      country: \"UK\",\n      litres: 99\n    }, {\n      country: \"Belgium\",\n      litres: 60\n    }, {\n      country: \"The Netherlands\",\n      litres: 50\n    }];\n    var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"date\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 30; // categoryAxis.renderer.labels.template.fill = am4core.color(\"#ffffff\");\n\n    categoryAxis.renderer.labels.template.adapter.add(\"dy\", function (dy, target) {\n      if (target.dataItem && target.dataItem.index & 2 == 2) {\n        return dy + 25;\n      }\n\n      return dy;\n    });\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis()); // Create series\n\n    var series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueY = \"visits\";\n    series.dataFields.categoryX = \"country\";\n    series.name = \"Visits\";\n    series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\n    series.columns.template.fillOpacity = 0.8;\n    var columnTemplate = series.columns.template;\n    columnTemplate.strokeWidth = 2;\n    columnTemplate.strokeOpacity = 1;\n    return () => {\n      chartRef.current && chartRef.current.dispose();\n      chartRef.current = null;\n    };\n  }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n    return [am4core.useTheme];\n  }), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: \"barchartdiv\",\n    style: {\n      width: \"100%\",\n      height: \"250px\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 86,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"shWAf3V3QuO1pjciRhin+fjMIyo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rapidev/Documents/task/src/Common/Barchart/Barchart.jsx"],"names":["React","useRef","useLayoutEffect","am4core","am4charts","am4themes_animated","App","props","chart","chartRef","useTheme","create","XYChart","data","country","litres","categoryAxis","xAxes","push","CategoryAxis","dataFields","category","renderer","grid","template","location","minGridDistance","labels","adapter","add","dy","target","dataItem","index","valueAxis","yAxes","ValueAxis","series","ColumnSeries","valueY","categoryX","name","columns","tooltipText","fillOpacity","columnTemplate","strokeWidth","strokeOpacity","current","dispose","width","height"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nfunction App(props) {\n  const chart = useRef(null);\n  let chartRef = useRef();\n  useLayoutEffect(() => {\n    am4core.useTheme(am4themes_animated);\n    var chart = am4core.create(\"barchartdiv\", am4charts.XYChart);\n    chart.data = [\n      {\n        country: \"Lithuania\",\n        litres: 501,\n      },\n      {\n        country: \"Czechia\",\n        litres: 301,\n      },\n      {\n        country: \"Ireland\",\n        litres: 201,\n      },\n      {\n        country: \"Germany\",\n        litres: 165,\n      },\n      {\n        country: \"Australia\",\n        litres: 139,\n      },\n      {\n        country: \"Austria\",\n        litres: 128,\n      },\n      {\n        country: \"UK\",\n        litres: 99,\n      },\n      {\n        country: \"Belgium\",\n        litres: 60,\n      },\n      {\n        country: \"The Netherlands\",\n        litres: 50,\n      },\n    ];\n\n    var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"date\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 30;\n    // categoryAxis.renderer.labels.template.fill = am4core.color(\"#ffffff\");\n    categoryAxis.renderer.labels.template.adapter.add(\n      \"dy\",\n      function (dy, target) {\n        if (target.dataItem && target.dataItem.index & (2 == 2)) {\n          return dy + 25;\n        }\n        return dy;\n      }\n    );\n\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n    // Create series\n    var series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueY = \"visits\";\n    series.dataFields.categoryX = \"country\";\n    series.name = \"Visits\";\n    series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\n    series.columns.template.fillOpacity = 0.8;\n\n    var columnTemplate = series.columns.template;\n    columnTemplate.strokeWidth = 2;\n    columnTemplate.strokeOpacity = 1;\n\n    return () => {\n      chartRef.current && chartRef.current.dispose();\n      chartRef.current = null;\n    };\n  }, []);\n  return (\n    <div id=\"barchartdiv\" style={{ width: \"100%\", height: \"250px\" }}></div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}