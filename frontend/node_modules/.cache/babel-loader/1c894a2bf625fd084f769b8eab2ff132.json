{"ast":null,"code":"var _jsxFileName = \"/home/rapidev/Documents/task/src/Common/Barchart/Barchart.jsx\",\n    _s2 = $RefreshSig$();\n\nimport React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App(props) {\n  _s2();\n\n  var _s = $RefreshSig$();\n\n  const chart = useRef(null);\n  let chartRef = useRef();\n  const h = props.height;\n  useLayoutEffect(_s(() => {\n    _s();\n\n    am4core.useTheme(am4themes_animated);\n\n    if (!chartRef.current) {\n      // Create chart instance\n      var chart = am4core.create(props.id ? props.id : \"barchartdiv\", am4charts.XYChart);\n      chart.data = [{\n        country: \"Abusive\",\n        visits: 2500\n      }, {\n        country: \"Supportive\",\n        visits: 1882\n      }, {\n        country: \"Positive\",\n        visits: 1809\n      }, {\n        country: \"Negative\",\n        visits: 1620\n      }, {\n        country: \"Anti-state\",\n        visits: 1122\n      }, {\n        country: \"Blasphemy\",\n        visits: 500\n      }];\n\n      if (props.twitter) {\n        const filtered = props.data.filter(item => {\n          return item.category !== \"shared\";\n        });\n        chart.data = filtered;\n      } else if (!props.filterTwitter) {\n        chart.data = props.data;\n      } else {\n        const filtered = props.data.filter(item => {\n          return item.category !== \"retweet\";\n        });\n        chart.data = filtered;\n      } // Create axes\n\n\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n      categoryAxis.dataFields.category = props.X ? props.X : \"date\";\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.renderer.minGridDistance = 1;\n      categoryAxis.renderer.labels.template.fill = am4core.color(props.labelColor ? props.labelColor : \"#ffffff\");\n      categoryAxis.renderer.labels.template.adapter.add(\"dy\", function (dy, target) {\n        if (target.dataItem && target.dataItem.index & 2 == 2) {\n          return dy + 25;\n        }\n\n        return dy;\n      });\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n      valueAxis.renderer.labels.template.fill = am4core.color(props.labelColor ? props.labelColor : \"#ffffff\"); // Create series\n\n      var series = chart.series.push(new am4charts.ColumnSeries());\n      series.dataFields.valueY = props.Y ? props.Y : \"frequency\";\n      series.dataFields.categoryX = props.X ? props.X : \"date\";\n      series.name = \"PostFreq\";\n      series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\n      series.columns.template.fillOpacity = 0.8;\n      var columnTemplate = series.columns.template;\n      columnTemplate.strokeWidth = 2;\n      columnTemplate.strokeOpacity = 1;\n      series.heatRules.push({\n        target: series.columns.template,\n        property: \"fill\",\n        min: am4core.color(\"lightblue\"),\n        max: am4core.color(props.from ? \"#F0E68C\" : \"lightblue\"),\n        dataField: \"valueY\"\n      });\n    }\n\n    return () => {\n      chartRef.current && chartRef.current.dispose();\n      chartRef.current = null;\n    };\n  }, \"tFi1QeP7MrrEQ5RfFlomBKZonOc=\", false, function () {\n    return [am4core.useTheme];\n  }), [props.data]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    id: props.id ? props.id : \"barchartdiv\",\n    style: {\n      width: props.width ? props.width : \"100%\",\n      height: h\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(App, \"shWAf3V3QuO1pjciRhin+fjMIyo=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/home/rapidev/Documents/task/src/Common/Barchart/Barchart.jsx"],"names":["React","useRef","useLayoutEffect","am4core","am4charts","am4themes_animated","App","props","chart","chartRef","h","height","useTheme","current","create","id","XYChart","data","country","visits","twitter","filtered","filter","item","category","filterTwitter","categoryAxis","xAxes","push","CategoryAxis","dataFields","X","renderer","grid","template","location","minGridDistance","labels","fill","color","labelColor","adapter","add","dy","target","dataItem","index","valueAxis","yAxes","ValueAxis","series","ColumnSeries","valueY","Y","categoryX","name","columns","tooltipText","fillOpacity","columnTemplate","strokeWidth","strokeOpacity","heatRules","property","min","max","from","dataField","dispose","width"],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nfunction App(props) {\n  const chart = useRef(null);\n  let chartRef = useRef();\n  const h = props.height;\n  useLayoutEffect(() => {\n    am4core.useTheme(am4themes_animated);\n    if (!chartRef.current) {\n      // Create chart instance\n      var chart = am4core.create(\n        props.id ? props.id : \"barchartdiv\",\n        am4charts.XYChart\n      );\n\n      chart.data = [\n        {\n          country: \"Abusive\",\n          visits: 2500,\n        },\n        {\n          country: \"Supportive\",\n          visits: 1882,\n        },\n        {\n          country: \"Positive\",\n          visits: 1809,\n        },\n        {\n          country: \"Negative\",\n          visits: 1620,\n        },\n        {\n          country: \"Anti-state\",\n          visits: 1122,\n        },\n        {\n          country: \"Blasphemy\",\n          visits: 500,\n        },\n      ];\n\n      if (props.twitter) {\n        const filtered = props.data.filter((item) => {\n          return item.category !== \"shared\";\n        });\n        chart.data = filtered;\n      } else if (!props.filterTwitter) {\n        chart.data = props.data;\n      } else {\n        const filtered = props.data.filter((item) => {\n          return item.category !== \"retweet\";\n        });\n        chart.data = filtered;\n      }\n\n      // Create axes\n\n      var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n      categoryAxis.dataFields.category = props.X ? props.X : \"date\";\n      categoryAxis.renderer.grid.template.location = 0;\n      categoryAxis.renderer.minGridDistance = 1;\n      categoryAxis.renderer.labels.template.fill = am4core.color(\n        props.labelColor ? props.labelColor : \"#ffffff\"\n      );\n\n      categoryAxis.renderer.labels.template.adapter.add(\n        \"dy\",\n        function (dy, target) {\n          if (target.dataItem && target.dataItem.index & (2 == 2)) {\n            return dy + 25;\n          }\n          return dy;\n        }\n      );\n\n      var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n\n      valueAxis.renderer.labels.template.fill = am4core.color(\n        props.labelColor ? props.labelColor : \"#ffffff\"\n      );\n      // Create series\n      var series = chart.series.push(new am4charts.ColumnSeries());\n      series.dataFields.valueY = props.Y ? props.Y : \"frequency\";\n      series.dataFields.categoryX = props.X ? props.X : \"date\";\n      series.name = \"PostFreq\";\n      series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\n      series.columns.template.fillOpacity = 0.8;\n\n      var columnTemplate = series.columns.template;\n      columnTemplate.strokeWidth = 2;\n      columnTemplate.strokeOpacity = 1;\n\n      series.heatRules.push({\n        target: series.columns.template,\n        property: \"fill\",\n        min: am4core.color(\"lightblue\"),\n        max: am4core.color(props.from ? \"#F0E68C\" : \"lightblue\"),\n        dataField: \"valueY\",\n      });\n    }\n\n    return () => {\n      chartRef.current && chartRef.current.dispose();\n      chartRef.current = null;\n    };\n  }, [props.data]);\n  return (\n    <div\n      id={props.id ? props.id : \"barchartdiv\"}\n      style={{ width: props.width ? props.width : \"100%\", height: h }}\n    ></div>\n  );\n}\nexport default App;\n"]},"metadata":{},"sourceType":"module"}