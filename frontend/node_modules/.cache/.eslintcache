[{"/home/rapidev/Documents/task/frontend/src/index.js":"1","/home/rapidev/Documents/task/frontend/src/reportWebVitals.js":"2","/home/rapidev/Documents/task/frontend/src/App.js":"3","/home/rapidev/Documents/task/frontend/src/Views/SchoolForm/SchoolForm.jsx":"4","/home/rapidev/Documents/task/frontend/src/Views/Dashboard/Dashboard.jsx":"5","/home/rapidev/Documents/task/frontend/src/Views/elements.jsx":"6","/home/rapidev/Documents/task/frontend/src/Common/Piechart/Piechart.jsx":"7","/home/rapidev/Documents/task/frontend/src/Common/Barchart/Barchart.jsx":"8","/home/rapidev/Documents/task/frontend/src/Services/formService.js":"9"},{"size":499,"mtime":1635244399934,"results":"10","hashOfConfig":"11"},{"size":362,"mtime":1635229234753,"results":"12","hashOfConfig":"11"},{"size":1345,"mtime":1635246451125,"results":"13","hashOfConfig":"11"},{"size":3851,"mtime":1635246466634,"results":"14","hashOfConfig":"11"},{"size":3997,"mtime":1635246272345,"results":"15","hashOfConfig":"11"},{"size":680,"mtime":1635235358624,"results":"16","hashOfConfig":"11"},{"size":1487,"mtime":1635242524806,"results":"17","hashOfConfig":"11"},{"size":2455,"mtime":1635242516534,"results":"18","hashOfConfig":"11"},{"size":954,"mtime":1635245696467,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1re4jux",{"filePath":"22","messages":"23","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"24","messages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"31"},{"filePath":"32","messages":"33","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"31"},{"filePath":"35","messages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"31"},{"filePath":"37","messages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"31"},{"filePath":"40","messages":"41","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"31"},"/home/rapidev/Documents/task/frontend/src/index.js",[],"/home/rapidev/Documents/task/frontend/src/reportWebVitals.js",[],"/home/rapidev/Documents/task/frontend/src/App.js",["43","44"],"/home/rapidev/Documents/task/frontend/src/Views/SchoolForm/SchoolForm.jsx",["45","46","47","48","49"],"/home/rapidev/Documents/task/frontend/src/Views/Dashboard/Dashboard.jsx",["50","51","52","53","54"],"import {\n  AppBar,\n  Badge,\n  Box,\n  Container,\n  CssBaseline,\n  Divider,\n  Drawer,\n  Grid,\n  IconButton,\n  List,\n  Paper,\n  Toolbar,\n  Typography,\n} from \"@mui/material\";\nimport React, { useEffect, useState } from \"react\";\nimport { FlexColCenter, FlexRowCenter, GreenBox } from \"../elements\";\nimport NotificationsIcon from \"@mui/icons-material/Notifications\";\nimport Barchart from \"../../Common/Barchart/Barchart\";\nimport Piechart from \"../../Common/Piechart/Piechart\";\nimport { getData } from \"../../Services/formService\";\nfunction Dashboard(props) {\n  const [state, setState] = useState({\n    expense: null,\n    revenue: null,\n    profit: null,\n  });\n  useEffect(() => {\n    callApi();\n  }, []);\n  const callApi = async () => {\n    let data = await getData();\n    console.log(\"data\", data);\n    setState({\n      expense: data.expense,\n      revenue: data.revenue,\n      profit: data.profit,\n    });\n  };\n  return (\n    <>\n      <Box>\n        <CssBaseline />\n        <AppBar position=\"absolute\">\n          <Toolbar\n            sx={{\n              pr: \"24px\", // keep right padding when drawer closed\n            }}\n          >\n            <IconButton\n              edge=\"start\"\n              color=\"inherit\"\n              aria-label=\"open drawer\"\n              sx={{\n                marginRight: \"36px\",\n              }}\n            >\n              {/* <MenuIcon /> */}\n            </IconButton>\n            <Typography\n              component=\"h1\"\n              variant=\"h6\"\n              color=\"inherit\"\n              noWrap\n              sx={{ flexGrow: 1 }}\n            >\n              Dashboard\n            </Typography>\n            <IconButton color=\"inherit\">\n              <IconButton color=\"inherit\">\n                <Badge color=\"secondary\">\n                  <NotificationsIcon />\n                </Badge>\n              </IconButton>\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n\n        <FlexRowCenter\n          mt={8}\n          sx={{\n            flexGrow: 1,\n            overflow: \"auto\",\n          }}\n        >\n          <Container maxWidth=\"lg\" sx={{ mt: 5, mb: 4 }}>\n            <Grid container spacing={3}>\n              <Grid item xs={6} md={4} lg={4}>\n                <GreenBox>\n                  <Typography color=\"common.white\" variant=\"h5\" gutterBottom>\n                    Your Expense\n                  </Typography>\n                  <Typography color=\"common.white\" variant=\"h5\">\n                    {state.expense}\n                  </Typography>\n                </GreenBox>\n              </Grid>\n              <Grid item xs={6} md={4} lg={4}>\n                <GreenBox>\n                  <Typography color=\"common.white\" variant=\"h5\" gutterBottom>\n                    Your Revenue\n                  </Typography>\n                  <Typography color=\"common.white\" variant=\"h5\">\n                    {state.revenue}\n                  </Typography>\n                </GreenBox>\n              </Grid>\n              <Grid item xs={6} md={4} lg={4}>\n                <GreenBox>\n                  <Typography color=\"common.white\" variant=\"h5\" gutterBottom>\n                    Your Profit\n                  </Typography>\n                  <Typography color=\"common.white\" variant=\"h5\">\n                    {state.profit}\n                  </Typography>\n                </GreenBox>\n              </Grid>\n            </Grid>\n            {/* <Copyright sx={{ pt: 4 }} /> */}\n          </Container>\n        </FlexRowCenter>\n        <FlexRowCenter>\n          <Container maxWidth=\"lg\" sx={{ mt: 5, mb: 4 }}>\n            <Grid container spacing={2}>\n              <Grid item xs={6} md={9} lg={7}>\n                <Box>\n                  <Barchart />\n                </Box>\n              </Grid>\n              <Grid item xs={6} md={3} lg={5}>\n                <Box>\n                  <Piechart />\n                </Box>\n              </Grid>\n            </Grid>\n          </Container>\n        </FlexRowCenter>\n      </Box>\n    </>\n  );\n}\n\nexport default Dashboard;\n",["55","56"],"/home/rapidev/Documents/task/frontend/src/Views/elements.jsx",["57","58"],"import { Button, Box, Container } from \"@mui/material\";\nimport styled from \"styled-components\";\n\nexport const FlexColCenter = styled(Box)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n`;\nexport const FlexColEnd = styled(Box)`\n  display: flex;\n  align-items: flex-end;\n  justify-content: flex-end;\n`;\nexport const FlexRowCenter = styled(Box)`\n  display: flex;\n  align-items: center;\n  justify-content: center;\n`;\nexport const GreenBox = styled(Box)`\n  background-color: #00b07b;\n  border-radius: 25px;\n  padding: 4%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  flex-direction: column;\n  min-height: 20vh;\n`;\n","/home/rapidev/Documents/task/frontend/src/Common/Piechart/Piechart.jsx",[],"/home/rapidev/Documents/task/frontend/src/Common/Barchart/Barchart.jsx",["59","60"],"import React, { useRef, useLayoutEffect } from \"react\";\nimport * as am4core from \"@amcharts/amcharts4/core\";\nimport * as am4charts from \"@amcharts/amcharts4/charts\";\nimport am4themes_animated from \"@amcharts/amcharts4/themes/animated\";\n\nfunction Barchart() {\n  let chartRef = useRef();\n  useLayoutEffect(() => {\n    am4core.useTheme(am4themes_animated);\n    var chart = am4core.create(\"barchartdiv\", am4charts.XYChart);\n    chart.data = [\n      {\n        month: \"Jan\",\n        profit: 501,\n      },\n      {\n        month: \"Feb\",\n        profit: 301,\n      },\n      {\n        month: \"Mar\",\n        profit: 201,\n      },\n      {\n        month: \"April\",\n        profit: 365,\n      },\n      {\n        month: \"May\",\n        profit: 201,\n      },\n      {\n        month: \"June\",\n        profit: 268,\n      },\n      {\n        month: \"July\",\n        profit: 182,\n      },\n      {\n        month: \"aug\",\n        profit: 60,\n      },\n      {\n        month: \"Sep\",\n        profit: 250,\n      },\n    ];\n\n    var categoryAxis = chart.xAxes.push(new am4charts.CategoryAxis());\n    categoryAxis.dataFields.category = \"month\";\n    categoryAxis.renderer.grid.template.location = 0;\n    categoryAxis.renderer.minGridDistance = 30;\n    // categoryAxis.renderer.labels.template.fill = am4core.color(\"#ffffff\");\n    categoryAxis.renderer.labels.template.adapter.add(\n      \"dy\",\n      function (dy, target) {\n        if (target.dataItem && target.dataItem.index & (2 == 2)) {\n          return dy + 25;\n        }\n        return dy;\n      }\n    );\n\n    var valueAxis = chart.yAxes.push(new am4charts.ValueAxis());\n    var series = chart.series.push(new am4charts.ColumnSeries());\n    series.dataFields.valueY = \"profit\";\n    series.dataFields.categoryX = \"month\";\n    series.name = \"Visits\";\n    series.columns.template.tooltipText = \"{categoryX}: [bold]{valueY}[/]\";\n    series.columns.template.fillOpacity = 0.8;\n    series.heatRules.push({\n      target: series.columns.template,\n      property: \"fill\",\n      min: am4core.color(\"#00b07b\"),\n      max: am4core.color(\"#7BBF6A\"),\n      dataField: \"valueY\",\n    });\n    var columnTemplate = series.columns.template;\n    columnTemplate.strokeWidth = 0;\n    columnTemplate.strokeOpacity = 1;\n\n    return () => {\n      chartRef.current && chartRef.current.dispose();\n      chartRef.current = null;\n    };\n  }, []);\n  return (\n    <div id=\"barchartdiv\" style={{ width: \"100%\", height: \"400px\" }}></div>\n  );\n}\nexport default Barchart;\n","/home/rapidev/Documents/task/frontend/src/Services/formService.js",["61"],"import axios from \"axios\";\nconst headers = {\n  \"Content-Type\": \"application/json\",\n};\nexport const sendData = (\n  noOfStudents,\n  totalClasses,\n  expense,\n  revenue,\n  profit\n) => {\n  const data = JSON.stringify({\n    noOfStudents: noOfStudents,\n    totalClasses: totalClasses,\n    expense: expense,\n    revenue: revenue,\n    profit: profit,\n  });\n  let dataToSend;\n  axios\n    .post(`${process.env.REACT_APP_DEV_URL}/add/`, data, {\n      headers,\n    })\n    .then((res) => {\n      let dataToSend = res.data;\n      console.log(dataToSend);\n    })\n    .catch((e) => {\n      console.log(e);\n      dataToSend = null;\n    });\n};\nexport const getData = async () => {\n  let dataToSend;\n  await axios\n    .get(`${process.env.REACT_APP_DEV_URL}/fetch/`, {\n      headers,\n    })\n    .then((res) => {\n      dataToSend = res.data[0];\n      return dataToSend;\n    })\n    .catch((e) => {\n      console.log(e);\n      dataToSend = null;\n    });\n  return dataToSend;\n};\n",{"ruleId":"62","severity":1,"message":"63","line":1,"column":8,"nodeType":"64","messageId":"65","endLine":1,"endColumn":12},{"ruleId":"66","severity":1,"message":"67","line":59,"column":15,"nodeType":"68","messageId":"69","endLine":59,"endColumn":17},{"ruleId":"62","severity":1,"message":"70","line":9,"column":10,"nodeType":"64","messageId":"65","endLine":9,"endColumn":25},{"ruleId":"62","severity":1,"message":"71","line":23,"column":10,"nodeType":"64","messageId":"65","endLine":23,"endColumn":22},{"ruleId":"62","severity":1,"message":"72","line":23,"column":24,"nodeType":"64","messageId":"65","endLine":23,"endColumn":39},{"ruleId":"62","severity":1,"message":"73","line":24,"column":10,"nodeType":"64","messageId":"65","endLine":24,"endColumn":22},{"ruleId":"62","severity":1,"message":"74","line":24,"column":24,"nodeType":"64","messageId":"65","endLine":24,"endColumn":39},{"ruleId":"62","severity":1,"message":"75","line":7,"column":3,"nodeType":"64","messageId":"65","endLine":7,"endColumn":10},{"ruleId":"62","severity":1,"message":"76","line":8,"column":3,"nodeType":"64","messageId":"65","endLine":8,"endColumn":9},{"ruleId":"62","severity":1,"message":"77","line":11,"column":3,"nodeType":"64","messageId":"65","endLine":11,"endColumn":7},{"ruleId":"62","severity":1,"message":"78","line":12,"column":3,"nodeType":"64","messageId":"65","endLine":12,"endColumn":8},{"ruleId":"62","severity":1,"message":"79","line":17,"column":10,"nodeType":"64","messageId":"65","endLine":17,"endColumn":23},{"ruleId":"80","replacedBy":"81"},{"ruleId":"82","replacedBy":"83"},{"ruleId":"62","severity":1,"message":"84","line":1,"column":10,"nodeType":"64","messageId":"65","endLine":1,"endColumn":16},{"ruleId":"62","severity":1,"message":"85","line":1,"column":23,"nodeType":"64","messageId":"65","endLine":1,"endColumn":32},{"ruleId":"86","severity":1,"message":"87","line":58,"column":57,"nodeType":"68","messageId":"88","endLine":58,"endColumn":63},{"ruleId":"62","severity":1,"message":"89","line":65,"column":9,"nodeType":"64","messageId":"65","endLine":65,"endColumn":18},{"ruleId":"62","severity":1,"message":"90","line":19,"column":7,"nodeType":"64","messageId":"65","endLine":19,"endColumn":17},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'findAllByTestId' is defined but never used.","'expenseError' is assigned a value but never used.","'setExpenseError' is assigned a value but never used.","'revenueError' is assigned a value but never used.","'setRevenueError' is assigned a value but never used.","'Divider' is defined but never used.","'Drawer' is defined but never used.","'List' is defined but never used.","'Paper' is defined but never used.","'FlexColCenter' is defined but never used.","no-native-reassign",["91"],"no-negated-in-lhs",["92"],"'Button' is defined but never used.","'Container' is defined but never used.","no-self-compare","Comparing to itself is potentially pointless.","comparingToSelf","'valueAxis' is assigned a value but never used.","'dataToSend' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]